[tool.poetry]
name = "watgpt"
version = "0.1.0"
description = "The Military University of Technology in Warsaw chatbot"
authors = [
    "KubiakJakub01",
    "LukaszKielczewski66",
    "maciekSzubiczuk"
]
license = "MIT"
readme = "README.md"

[tool.poetry-exec-plugin.commands]
ruff = "ruff check watgpt"
ruff_format = "ruff format watgpt"
ruff_format_check = "ruff format --check watgpt"
mypy = "mypy --ignore-missing-imports watgpt"
pylint = "pylint --rcfile pyproject.toml watgpt"

[tool.poetry.dependencies]
python = "^3.10"
pandas = "^2.2.3"
unidecode = "^1.3.8"
langchain = "0.3.18"
selenium = "^4.28.1"
beautifulsoup4 = "^4.13.3"
pymupdf = "^1.25.3"
requests = "^2.32.3"
types-requests = "2.32.0.20241016"
coloredlogs = "^15.0.1"
langchain-chroma = "^0.2.2"
langchain-huggingface = "^0.1.2"
langchain-groq = "^0.2.4"
types-pyyaml = "6.0.12.20241230"
scrapy = "^2.12.0"
transformers = "^4.30.0"

[tool.poetry.group.dev.dependencies]
mypy = "1.15.0"
ruff = "0.9.6"
pre-commit = "4.1.0"
pylint = "3.3.4"
pytest = "8.3.4"
pytest-cov = "6.0.0"
ipykernel = "^6.29.5"

[tool.pylint]
max-line-length = 100
disable = ["missing-docstring",
            "invalid-name",
            "too-many-instance-attributes",
            "too-many-arguments",
            "method-hidden",
            "too-many-locals",
            "consider-using-from-import",
            "relative-beyond-top-level",
            "too-many-ancestors",
            "too-many-arguments",
            "too-many-positional-arguments",
            "duplicate-code"]
fail-under = 10.0
generated-members=["numpy.*","torch.*"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 100
indent-width = 4

# Assume Python 3.10
target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "single"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
